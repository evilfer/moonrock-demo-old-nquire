<?php

/**
* Valid permissions for this module
* @return array An array of valid permissions for the onthisdate module
*/
function removelogmessage_perm() {
  return array('Administer Remove Log Message');
} // function onthisdate_perm()


/**
 * Implementation of hook_menu().
 */
function removelogmessage_menu(){

		$items = array();
		
		$items['admin/settings/removelogmessage'] = array(
			'title' => 'Remove Log Message',
			'description' => 'Remove the dang log message.',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('removelogmessage_admin_settings'),
			'access callback' => 'user_access',
			'access arguments' => array('Administer Remove Log Message')
		);	
	  return $items;

  
}

function removelogmessage_admin_settings(&$form_state) {
	$content_types = node_get_types();
	$roles = user_roles();
	$form['#submit'][] = 'removelogmessage_form_submit';

	foreach($content_types as $type => $values){
		$form[$type] = array(
		  '#type' => 'fieldset', 
		  '#title' => t($type . ' Settings'), 
		  '#access' => user_access('Administer Remove Log Message'),
		  '#weight' => -1, 
		  '#collapsible' => TRUE, 
		  '#collapsed' => TRUE,
		);
		$form[$type]['roles'] = array(
		  '#type' => 'fieldset', 
		  '#title' => t("For these Roles:"), 
		  '#description' => t("Checking no boxes is the same as checking all boxes."), 
		  '#weight' => 0, 
		  '#collapsible' => FALSE, 
		  '#collapsed' => FALSE,
		);
		foreach($roles as $roleid => $rolename){
			  $form[$type]['roles']["rlm_role_" . $type . "_" . $roleid] = array(
			  '#type' => 'checkbox', 
			  '#title' => $rolename,
			  '#default_value' => variable_get("rlm_role_" . $type . "_" . $roleid, 0)
			);		
		}
		$form[$type]['actions'] = array(
		  '#type' => 'fieldset', 
		  '#title' => t("Do the Following:"), 
		  '#weight' => 0, 
		  '#collapsible' => FALSE, 
		  '#collapsed' => FALSE,
		);		
		$form[$type]['actions']["rlm_log_" . $type] = array(
		  '#type' => 'checkbox', 
		  '#title' => t('Hide the log.'),
		  '#default_value' => variable_get("rlm_log_" . $type, 0)
		);
		$form[$type]['actions']["rlm_revisions_" . $type] = array(
		  '#type' => 'checkbox', 
		  '#title' => t('Hide the whole revision fieldset.'),
		  '#default_value' => variable_get("rlm_revisions_" . $type, 0)
		);		
	}

	return system_settings_form($form);
	

}

/**
* Implementation of hook_form_alter().
*/
function removelogmessage_form_alter(&$form, &$form_state, $form_id) {
  GLOBAL $user;
  $node_type = $form['#node']->type;

  if (isset($form['#node']) && isset($form['revision_information']['log']) && $form_id == $form['#node']->type .'_node_form') {

	//check to see if all roles are selected by not selecting any roles
    $all_roles = 1;
	$roles = user_roles();
	foreach($roles as $roleid => $rolename){
		if(variable_get("rlm_role_" . $node_type . "_" . $roleid,0)){
			$all_roles = 0;
			break;
		}
	}	
	
	if($all_roles){
		if(variable_get("rlm_log_" . $node_type,0)){
			$form['revision_information']['log']['#access'] = FALSE;			
		}
		if(variable_get("rlm_revisions_" . $node_type,0)){
			$form['revision_information']['#access'] = FALSE;			
		}		
		return;
	}


  	foreach($user->roles as $roleid => $rolename){	
		if(variable_get("rlm_role_" . $node_type . "_" . $roleid,0)){						
			if(variable_get("rlm_log_" . $node_type,0)){
				$form['revision_information']['log']['#access'] = FALSE;			
			}
			if(variable_get("rlm_revisions_" . $node_type,0)){
				$form['revision_information']['#access'] = FALSE;			
			}				
		}	
	}

	
  }
  
}
?>