<?php
// $Id: pi_available_measures.install,v 1.1 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Install for module for creating "available measurements" node type
 */


/**
 * Implementation of pi_available_measures_install().
 */
function pi_available_measures_install() {
	// Create tables.
	drupal_install_schema('pi_available_measures');

	variable_set("og_content_type_usage_pi_available_measures", 'group_post');
	//Options are status, promote, sticky, revision
	variable_set("node_options_pi_available_measures", array('status','revision'));
	variable_set("comment_pi_available_measures", COMMENT_NODE_DISABLED);
	variable_set('upload_pi_available_measures', 0);

	$activities = variable_get('pi_activities', array() );
	$activities['pi_available_measures'] = 'Available measures';
	variable_set('pi_activities', $activities);

}

/**
 * Implementation of pi_available_measures_uninstall().
 */
function pi_available_measures_uninstall() {
	// Remove tables.
	drupal_uninstall_schema('pi_available_measures');
	
	variable_del("og_content_type_usage_pi_available_measures");
	variable_del("node_options_pi_available_measures");
	variable_del("comment_pi_available_measures");
	variable_del("upload_pi_available_measures");
	
	$activities = variable_get('pi_activities', array() );
	unset( $activities['pi_available_measures'] );
	variable_set('pi_activities', $activities);
}

/**
 * Implementation of pi_available_measures_schema().
 */
function pi_available_measures_schema() {
	
	$schema['pi_available_measures'] = array(
    'description' => 'PI available measures to choose from',
    'fields' => array(
		'nid' => array(
			'type' => 'int',
			'unsigned' => TRUE,
			'not null' => TRUE,
			'default' => '0',
			'description' => 'Primary Key: Unique ID.' ),
		'vid' => array(
			'type' => 'int',
			'unsigned' => TRUE,
			'not null' => TRUE,
			'default' => '0',
			'description' => 'Primary Key: Unique: The current vid version identifier.' ),
		'symbol' => array(
			'type' => 'varchar',
			'length' => 64,
			'not null' => FALSE,
			'description' => 'What symbol.' ),
		'units' => array(
			'type' => 'varchar',
			'length' => 255,
			'not null' => FALSE,
			'description' => 'What units.' ),
		'units_short' => array(
			'type' => 'varchar',
			'length' => 64,
			'not null' => FALSE,
			'default' => NULL,
			'description' => 'What units (short version).' ),
		'field_type' => array(
			'type' => 'varchar',
			'length' => 64,
			'not null' => TRUE,
			'description' => 'What type.' ),
		'data_type' => array(
			'type' => 'varchar',
			'length' => 64,
			'not null' => TRUE,
			'description' => 'What type.' ),
		'list_options' => array(
			'type' => 'text',
			'description' => 'What type.' ),
		'content_options' => array(
			'type' => 'varchar', 
			'length' => 64,
			'not null' => FALSE,
			'default' => NULL ),
		'textfield_size' => array(
			'type' => 'int' ,
			'size' => 'tiny',
			'not null' => TRUE,
			'default' => 5 ),
		'textarea_cols' => array(
			'type' => 'int',
			'size' => 'tiny',
			'not null' => TRUE,
			'default' => 50 ),
		'textarea_rows' => array(
			'type' => 'int',
			'size' => 'tiny',
			'not null' => FALSE,
			'default' => 3 ),
      	'measurement_device_name' => array(
			'type' => 'varchar',
			'not null' => FALSE,
			'length' => 255,
			'description' => 'Measurement device name.' ),
      	'measurement_device_description' => array(
			'type' => 'text',
			'not null' => FALSE,
			'description' => 'Measurement device description.' ),
      	'image_id' => array(
			'type' => 'int',
			'unsigned' => TRUE,
			'not null' => FALSE,
			'description' => 'Image illustrating the measurement device' ) ),  
	'primary key' => array('nid','vid'),
    'unique keys' => array( 'vid'	=> array('vid') ),
    'indexes' => array(	'nid'	=> array('nid') )
	);	
	
	return $schema;
}
