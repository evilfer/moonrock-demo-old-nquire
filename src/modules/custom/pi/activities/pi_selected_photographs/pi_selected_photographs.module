<?php
// $Id$: pi_selected_photographs.module ou_mbg Exp $

/**
 * @file
 * Provides a "selected_photographs" node type.
 */

/**
 * Implementation of hook_node_info().
 */
function pi_selected_photographs_node_info() {
  // We return an array since a module can define multiple node types.
  // We're only defining one node type, type 'pi_selected_photographs'.
  return array(
    'pi_selected_photographs' => array(
      'name' => t('Selected photographs'), // Required.
      'module' => 'pi_selected_photographs',  // Required.
      'description' => t('Select one or more photographs for carrying out your inquiry'), // Required.
      'has_title' => FALSE,
      'title_label' => t('Title'),
      'has_body' => TRUE,
      'body_label' => t('Caption'),
      'locked' => TRUE
    )
  );
}
	//Commented out as no longer used in Drupal 6. Previously only the hook_menu line was active MBG 09_08_11
	/**
 	* Implementation of hook_menu().
 	*/
	//function pi_selected_photographs_menu($may_cache) {
	//  $items = array();
	//
	//  // Do not cache this menu item during the development of this module.
	//  if (!$may_cache) {
	//    $items[] = array(
	//      'path' => 'node/add/pi_selected_photographs',
	//      'title' => t('Selected photographs'),
	//      'access' => user_access('create selected_photographs'),
	//    );
	//  }	
	//
	//  return $items;
	//}

/**
 * Implementation of hook_perm().
 */
function pi_selected_photographs_perm() {
  return array('create pi_selected_photographs', 'edit own pi_selected_photographs');
}

/**
 * Implementation of hook_access().
 */
function pi_selected_photographs_access($op, $node, $account) {
  global $user;

  if ($op == 'create') {
    return (user_access('create pi_selected_photographs'));
  }

  if ($op == 'update' || $op == 'delete') {
    return (user_access('edit own pi_selected_photographs'));
  }
}

/**
 * Implementation of hook_form().
 */
function pi_selected_photographs_form(&$node) {

  drupal_set_title(t('Select this image'));
  
  if (arg(1) == 'add') {
    $image_nid = arg(3);
  };
  
  if (!isset($image_nid)) {
    $image_nid = $node->image_id;
  };
  
  $type = node_get_types('type', $node);  
  
  $results = db_query("SELECT nid,title FROM {node} WHERE type = 'pi_available_locations' AND status = '1'");
  $options = array();
  
  while ($result = db_fetch_array($results)) {
    $options[$result['nid']] = $result['title'];
  }

  $form['#theme'] = 'pi_selected_photographs_form_layout';
  
  $form['image_id'] = array(
    '#type' => 'hidden',
    '#title' => 'image_id',
    '#required' => FALSE,
    '#default_value' => t($image_nid)
  );
  $form['image'] = array(
    '#prefix' => '<div>',
    '#value' => t('<img style="float: left" src="' . url("image/view/" . $image_nid . "/preview") . '" />'),
    '#suffix' => '</div>',
    '#weight' => -10
  );
  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => check_plain($type->title_label),
    '#required' => FALSE,
    '#default_value' => t($node->title),
    '#size' => 25,
    '#weight' => -5
  );
  $form['body_filter']['body'] = array(
    '#type' => 'textfield',
    '#title' => check_plain($type->body_label),
    '#required' => FALSE,
    '#default_value' => t($node->body),
    '#size' => 50,
    '#weight' => -3
  );
  $form['location_id'] = array(
    '#type' => 'select',
    '#title' => t('Select location'),
    '#required' => TRUE,
    '#default_value' => explode(",", $node->location_id),
    '#options' => $options,
    '#weight' => 5
  );

  $prefix = "";

  $form['#prefix'] = $prefix;

  return $form;
}

/**
 * Implementation of hook_validate().
 */
function pi_selected_photographs_validate($node) {
}

/**
 * Implementation of hook_insert().
 */
function pi_selected_photographs_insert($node) {
 db_query("INSERT INTO {pi_selected_photographs} (nid, vid, image_id, location_id, title, caption) VALUES (%d, %d, '%d', '%d', '%s', '%s')", $node->nid, $node->vid, $node->image_id, $node->location_id, $node->title, $node->body);
}

/**
 * Implementation of hook_update().
 */
function pi_selected_photographs_update($node) {
  if ($node->revision) {
    pi_selected_photographs_insert($node);
  }
  else {
    pi_selected_photographs_delete($node);
    pi_selected_photographs_insert($node);
  }
}

/**
 * Implementation of hook_delete().
 */
function pi_selected_photographs_delete(&$node) {
  // Delete the related information we were saving for this node.
  db_query('DELETE FROM {pi_selected_photographs} WHERE nid = %d', $node->nid);
}


/**
 * Implementation of hook_load().
 */
function pi_selected_photographs_load($node) {
  // drupal_add_js('misc/collapse.js');
  return db_fetch_object(db_query('SELECT image_id, location_id, title, caption FROM {pi_selected_photographs} WHERE vid = %d',
    $node->vid));
}

/**
 * Implementation of hook_view().
 */
function pi_selected_photographs_view($node, $teaser = FALSE, $page = FALSE) {
  if (!$teaser) {
    // Use Drupal's default node view.
    // $node = node_prepare($node, $teaser);

    $node->content['pi_selected_photographs'] = array(
      '#value' => theme('pi_selected_photographs', $node),
      '#weight' => 2
      );
  }

  if ($teaser) {
    // Use Drupal's default node view.
    $node = node_prepare($node, $teaser);
  }

  return $node;
}

/**
 * MISSING
 * 
 * @return multitype:multitype:multitype:string   
 */
function pi_selected_photographs_theme() {
  return array(
    'pi_selected_photographs' => array(
      'arguments' => array('node'),
    ),
  );
}


/**
 * MISSING
 * 
 * @param unknown_type $node
 * @return string
 */
function theme_pi_selected_photographs($node) {

  $location_node = node_load($node->location_id);
  
  $output = "";

  if (isset($node->image_id)) {
    $output .= '<div class="clear_both">';
    $output .= '<img style="float: left; clear: left; padding: 1em 0 1em 0;" src="' . url("image/view/" . $node->image_id . "/preview") . '" />';
    $output .= '</div>';
  };
  $output .= '<div class="clear_both">';
  $output .= '<strong>Caption&#58; </strong>' . t( $node->body ) . '<br />';
  $output .= '<strong>Location: </strong>' . t( $location_node->title);
  $output .= '</div>';

  return $output;
}


/**
 * MISSING
 * 
 * @param unknown_type $form
 * @return unknown
 */
function theme_pi_selected_photographs_form_layout($form) {
  
  $content = "";
  
  $content .= '<div class="clear_both"></div>';
  
  $content .= drupal_render($form['title']);
  $content .= drupal_render($form['image_id']);
  
  $content .= '<div class="clear_both"></div>';
  $content .= drupal_render($form['image']);
  $content .= '<div class="clear_both"></div>';
  
  $content .= '<div class="clear_both">';
  $content .= drupal_render($form['body_filter']['body']);
  $content .= drupal_render($form['location_id']);
  $content .= '</div>';

  $content .= '<div class="clear_both"></div>';
  
  $content .= drupal_render($form);
  
  return $content;
}
