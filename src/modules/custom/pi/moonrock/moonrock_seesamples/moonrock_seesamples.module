<?php

// $Id: pi_wiki_notes.module,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Module for creating "pi_wiki_notes" node type
 */

/**
 * Implementation of hook_node_info().
 */
function moonrock_seesamples_node_info() {

  return array(
      'moonrock_seesamples' => array(
          'name' => t('Moonrock see samples'), // Required.
          'module' => 'moonrock_seesamples', // Required.
          'description' => t('See Moon rock samples'), // Required.
          'has_title' => TRUE,
          'title_label' => t('Title'),
          'has_body' => TRUE,
          'body_label' => t('Body'),
          'locked' => TRUE)
  );
}

/**
 * Implementation of hook_perm().
 */
function moonrock_seesamples_perm() {
  
}

/**
 * Implementation of hook_access().
 */
function moonrock_seesamples_access($op, $node, $account) {
  global $user;
  $details = get_inquiry_details_from_current_path();

  if ($op == 'create') {
    return check_node_function_of_activity($details->inquiry_id, $details->activity_id, $user->uid, 'add');
  }

  if ($op == 'update' || $op == 'delete') {
    return check_node_function_of_activity($details->inquiry_id, $details->activity_id, $user->uid, 'edit');
  }
}

/**
 * Implementation of hook_form().
 */
function moonrock_seesamples_form(&$node) {

  // Get metadata for this node type
  // (we use it for labeling title and body fields).
  // We defined this in pi_wiki_notes_node_info().
  $type = node_get_types('type', $node);
  global $user;

  $node_details = get_inquiry_details_from_current_path();
  if (is_numeric($node_details->activity_id)) {
    $current_activity = load_activity($node_details->activity_id);
  }

  if ($current_activity->name) {
    drupal_set_title(t($current_activity->name));
  }

  $form['title'] = array(
      '#type' => 'textfield',
      '#title' => check_plain($type->title_label),
      '#required' => FALSE,
      '#default_value' => $node->title,
      '#weight' => -5
  );
  $form['body'] = array(
      '#type' => 'textarea',
      '#title' => t('Type the introduction to this activity'),
      '#required' => TRUE,
      '#default_value' => $node->body,
      '#weight' => -5
  );

  $form['body_filter']['samples'] = array(
      '#type' => 'textarea',
      '#title' => t('Samples'),
      '#required' => TRUE,
      '#default_value' => $node->samples,
      '#description' => t('Type the URLs of the samples and click the Save button when you are finished'),
      '#resizable' => TRUE,
      '#rows' => 8,
      '#cols' => 40,
      '#weight' => -2
  );

  $prefix = "";
  if ($current_activity->description) {
    $prefix .= "<p>" . check_plain($current_activity->description) . "</p>";
  }

  $form['#prefix'] = $prefix;

  return $form;
}

/**
 * Implementation of hook_insert().
 */
function moonrock_seesamples_insert($node) {
  db_query("INSERT INTO {moonrock_seesamples} (nid, vid, samples) VALUES ('%d', '%d', '%s')", $node->nid, $node->vid, $node->samples);
}

/**
 * Implementation of hook_update().
 */
function moonrock_seesamples_update($node) {
  if ($node->revision) {
    moonrock_seesamples_insert($node);
  } else {
    db_query("UPDATE {moonrock_seesamples} SET samples = '%s' WHERE vid = %d", $node->samples, $node->vid);
  }
}

/**
 * Implementation of hook_delete().
 */
function moonrock_seesamples_delete(&$node) {
  // Delete the related information we were saving for this node.
  db_query('DELETE FROM {moonrock_seesamples} WHERE nid = %d', $node->nid);
}

/**
 * Implementation of hook_load().
 */
function moonrock_seesamples_load($node) {
  return db_fetch_object(db_query('SELECT * FROM {moonrock_seesamples} WHERE vid = %d', $node->vid));
}

function moonrock_seesamples_link_alter(&$links, $node) {
  // remove attachment links from upload.module
  unset($links['upload_attachments']);
}

/**
 * Implementation of hook_view().
 */
function moonrock_seesamples_view($node, $teaser = FALSE, $page = FALSE) {
  $node->content['body']['#value'] = $teaser ? $node->teaser : ('<div id="moonrock-activity-description">' . $node->body . '</div>');

  $node->content['moonrock_seesamples'] = array(
      '#value' => theme('moonrock_seesamples', $node, $teaser),
      '#weight' => 2
  );

  return $node;
}

/**
 * MISSING
 *
 * @return multitype:multitype:multitype:string
 */
function moonrock_seesamples_theme() {
  return array(
      'moonrock_seesamples' => array(
          'arguments' => array('node', 'teaser'),
      ),
      'moonrock_seesamples_table' => array(
          'arguments' => array('node', 'teaser', 'linkVM'),
      ),
      'moonrock_seesamples_sample_pics' => array(
          'arguments' => array('node'),
      ),
  );
}

function theme_moonrock_seesamples($node, $teaser) {
  if ($teaser) {
    $activity_id = get_activity_id_for_nid($node->nid);
    $text = theme('moonrock_seesamples_sample_pics', $node);
    $output = '<a href="?q=activity/' . $activity_id . '">' . $text . '</a>';
    return $output;
  } else {
    return theme('moonrock_vm_view_page', $node);
  }
}

function theme_moonrock_seesamples_sample_pics($node) {
  $output = '';

  $output .= '<div style="width: 100%;">';
  $samples = moonrock_seesamples_get_main_samples($node);
  foreach ($samples as $sample) {
    $style = 'padding:2px;margin:10px; width: 100px;border: 1px solid gray; border-radius:3px; background: lightgray;';
    $img = '<img style="' . $style . '" src="' . $sample['sample']['image'] . '"></img>';
    $output .= $img;
  }
  $output .= '</div>';
  return $output;
}

function theme_moonrock_seesamples_table($node, $teaser, $linkVM) {
  moonrock_seesamples_load_resources();
  moonrock_sample_utils_load_vmSample_format();
  moonrock_vm_state_load_resources();

  $output = '';

  $samples = moonrock_seesamples_get_main_samples($node);

  $output .= '<div class="moonrock-sample-list">';
  foreach ($samples as $sample) {
    $output .= '<div class="moonrock-sample-container">';

    $output .= '<div class="vmSample" item-id="' . $sample['sample']['nid'] . '" '
            . 'item-image="' . $sample['sample']['image'] . '" '
            . 'item-title="' . check_plain($sample['title']) . '" ';
    if ($linkVM) {
      $output .= 'item-vm="' . $sample['vm'] . '"';
    }
    $output .= '></div>';
    if (!$teaser) {
      $output .= '<div class="moonrock-sample-title">' . check_plain($sample['title']) . '</div>';
      $output .= '<div class="moonrock-sample-metadata">';
      foreach ($sample['metadata'] as $key => $metadatum) {
        $output .= '<div class="moonrock-sample-metadata-row">';
        $output .= '<div class="moonrock-sample-metadata-cell moonrock-sample-metadata-key moonrock-sample-metadata-key-' . $key . '">' . $metadatum['title'] . '</div>';
        $output .= '<div class="moonrock-sample-metadata-cell moonrock-sample-metadata-value moonrock-sample-metadata-value-' . $key . '">' . $metadatum['value'] . '</div>';
        $output .= '</div>';
      }
      $output .= '</div>';
    }

    $output .= '</div>';
  }
  $output .= '</div>';

  return $output;
}

function moonrock_seesamples_form_pi_key_questions_node_form_alter(&$form, &$form_state) {
  $seesamples = moonrock_sample_utils_find_unique_seesamples_node();
  $form['#prefix'] = theme('moonrock_seesamples_table', $seesamples, TRUE, FALSE);
  return;
}

function moonrock_seesamples_load_resources() {
  drupal_add_css(drupal_get_path('module', 'moonrock_seesamples') . '/css/seesamples.css');
  drupal_add_js(drupal_get_path('module', 'moonrock_seesamples') . '/js/seesamples.js');
}

function moonrock_seesamples_get_alternative_sample_title($node, $title) {
  $sample_list = explode("\n", $node->samples);

  foreach ($sample_list as $sample) {
    $parts = explode("|", trim($sample), 2);
    if (count($parts) == 2) {
      if (!strcmp($parts[0], $title)) {
        return $parts[1];
      }
    }
  }

  return $title;
}

function moonrock_seesamples_get_main_samples($node) {
  $result = array();
  $sample_list = explode("\n", $node->samples);


  $query = "SELECT {node}.nid FROM {node} "
          . "LEFT JOIN {moonrock_sample} on {node}.nid={moonrock_sample}.nid "
          . "WHERE {node}.type='moonrock_sample' "
          . "AND {node}.title LIKE '%s' LIMIT 1";

  foreach ($sample_list as $sample) {
    $parts = explode("|", trim($sample), 2);
    if (count($parts) == 2) {
      $object = db_fetch_object(db_query($query, $parts[0]));
      if ($object) {
        $result[] = moonrock_sample_utils_prepare_object($object->nid);
      }
    }
  }

  return $result;
}

function moonrock_seesamples_search_enabled($node) {
  $sample_view_activity_id = get_activity_id_for_nid($node->nid);
  $sample_view_activity = pi_activity_load($sample_view_activity_id);

  return $sample_view_activity && strpos($sample_view_activity->parameters, "moonrock_sample_search") !== FALSE;
}

function moonrock_seesamples_specific_sample_title($node, $sample_node) {
  $sample_list = explode("\n", $node->samples);

  $titles = array();
  foreach ($sample_list as $sample) {
    $parts = explode("|", trim($sample), 2);

    if (count($parts) == 2 && !strcasecmp($parts[0], $sample_node->title)) {
      return $parts[1];
    }
  }
  return NULL;
}