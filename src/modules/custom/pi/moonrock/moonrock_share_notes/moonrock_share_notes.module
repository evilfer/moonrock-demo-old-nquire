<?php
// $Id: moonrock_share_notes.module,v 1.2 2009/06/11 09:55:10 ou_mbg Exp $

/**
 * @file
 * Module for creating "moonrock_share_notes" node type
 */


/**
 * Implementation of hook_node_info().
 */
function moonrock_share_notes_node_info() {

  return array(
      'moonrock_share_notes' => array(
          'name' => t('Inquiry shared notes'), // Required.
          'module' => 'moonrock_share_notes',  // Required.
          'description' => t('Keep notes related to a topic'), // Required.
          'has_title' => TRUE,
          'title_label' => t('Group notes'),
          'has_body' => TRUE,
          'body_label' => t('Group notes'),
          'locked' => TRUE)
  );

}


/**
 * Implementation of hook_perm().
 */
function moonrock_share_notes_perm() {
}

/**
 * Implementation of hook_access().
 */
function moonrock_share_notes_access($op, $node, $account) {
  global $user;
  $details = get_inquiry_details_from_current_path();
  if ($op == 'view') {
    return true;
  }
  else if ($op == 'create') {
    return check_node_function_of_activity ($details->inquiry_id, $details->activity_id, $user->uid, 'add');
  }
  else if ($op == 'update' || $op == 'delete') {
    return check_node_function_of_activity ($details->inquiry_id, $details->activity_id, $user->uid, 'edit');
  }
}

/**
 * Implementation of hook_form().
 */
function moonrock_share_notes_form(&$node) {

  // Get metadata for this node type
  // (we use it for labeling title and body fields).
  // We defined this in moonrock_share_notes_node_info().
  $type = node_get_types('type', $node);
  global $user;

  $node_details = get_inquiry_details_from_current_path();
  if (is_numeric($node_details->activity_id)) {
  		$current_activity = load_activity($node_details->activity_id);
  }
   
  if ($current_activity->name) {
  		drupal_set_title(t($current_activity->name));
  }

  $form['title'] = array(
      '#type' => 'hidden',
      '#title' => check_plain($type->title_label),
      '#required' => FALSE,
      '#default_value' => $type->title_label,
      '#weight' => -5
  );

  $form['body_filter']['notes'] = array(
      '#type' => 'textarea',
      '#title' => t('Notes'),
      '#required' => TRUE,
      '#default_value' => $node->notes,
      '#description' => t('Type your shared notes into the above box and click on the Save button when you are finished'),
      '#resizable' => TRUE,
      '#rows' => 8,
      '#cols' => 40,
      '#weight' => -2
  );

  $prefix = "";
  if ($current_activity->description) {
    $prefix .= "<p>" . check_plain($current_activity->description) . "</p>";
  }

  $form['#prefix'] = $prefix;

  return $form;

}

/**
 * Implementation of hook_insert().
 */
function moonrock_share_notes_insert($node) {
  db_query("INSERT INTO {moonrock_share_notes} (nid, vid, notes) VALUES ('%d', '%d', '%s')",
      $node->nid, $node->vid, $node->notes);
}

/**
 * Implementation of hook_update().
 */
function moonrock_share_notes_update($node) {
  if ($node->revision) {
    moonrock_share_notes_insert($node);
  }

  else {
    db_query("UPDATE {moonrock_share_notes} SET notes = '%s' WHERE vid = %d", $node->notes, $node->vid);
  }
}

/**
 * Implementation of hook_delete().
 */
function moonrock_share_notes_delete(&$node) {
  // Delete the related information we were saving for this node.
  db_query('DELETE FROM {moonrock_share_notes} WHERE nid = %d', $node->nid);
}

/**
 * Implementation of hook_load().
 */
function moonrock_share_notes_load($node) {
  return db_fetch_object(db_query('SELECT * FROM {moonrock_share_notes} WHERE vid = %d',
      $node->vid));
}

function moonrock_share_notes_link_alter(&$links, $node) {
  // remove attachment links from upload.module
  unset($links['upload_attachments']);
}


/**
 * Implementation of hook_view().
 */
function moonrock_share_notes_view($node, $teaser = FALSE, $page = FALSE) {
  // Use Drupal's default node view.
  $node = node_prepare($node, $teaser);

  $node->content['moonrock_share_notes'] = array(
      '#value' => theme('moonrock_share_notes', $node, $teaser),
      '#weight' => 2
  );

  return $node;
}

/**
 * MISSING
 *
 * @return multitype:multitype:multitype:string
 */
function moonrock_share_notes_theme() {
  return array(
      'moonrock_share_notes' => array(
          'arguments' => array('node', 'teaser'),
      ),
  );
}


/**
 * MISSING
 *
 * @param unknown_type $node
 * @return string
 */
function theme_moonrock_share_notes($node, $teaser) {
  $node_details = get_inquiry_details_from_current_path();
  if (is_numeric($node_details->activity_id)) {
  		$current_activity = load_activity($node_details->activity_id);
  }
   
  if ($current_activity->name) {
  		drupal_set_title(t($current_activity->name));
  }
   
  if($teaser) {
    $break_position = strpos($node->notes, '<!--break-->');
    if($break_position) {
      $output = substr($node->notes, 0, $break_position);
    }
    else {
      $output = $node->notes;
    }
  }
  else {
    $output = $node->notes;
  }

  return $output;
}

