<?php

function moonrock_data_input_menu() {

  $items = array(
      'moonrock_data_input/%/search' => array(
          'page callback' => 'moonrock_data_input_data_search',
          'access callback' => 'moonrock_data_input_data_search_access',
          'type' => MENU_CALLBACK,
      ),
      'moonrock_data_input/%/submit' => array(
          'page callback' => 'moonrock_data_input_data_submit',
          'access callback' => 'moonrock_data_input_data_submit_access',
          'type' => MENU_CALLBACK,
      ),
  );

  return $items;
}

function moonrock_data_input_data_search_access() {
  return true;
}

function moonrock_data_input_data_submit_access() {
  return true;
}

function moonrock_data_input_data_submit() {
  global $user;

  if (strlen($_REQUEST['data_nid']) > 0) {
    $node = node_load($_REQUEST['data_nid']);
    if ($node->uid != $user->uid) {
      return;
    }
  } else {
    $node = new stdClass();
    $node->uid = $user->uid;
    $node->type = 'pi_data';
  }
  $node->form_id = $_REQUEST['form_id'];
  $node->form_build_id = $_REQUEST['form_build_id'];
  $node->title = $_REQUEST['title'];
  $node->onepageprofile_categories = $_REQUEST['onepageprofile_categories'];
  node_save($node);

  drupal_json(array(
      'status' => TRUE,
          )
  );
}

function moonrock_data_input_nodeapi(&$node, $op) {
  if ($op === 'presave' && $node->form_id === 'pi_data_node_form') {
    global $user;
    $node_details = get_inquiry_details_from_current_path();
    $measures_param = find_selected_measures_nid_for_uid_and_inquiry($user->uid, $node_details->inquiry_id);
    if ($measures_param) {
      $measures_node = node_load($measures_param);
      $measure_rows = $measures_node->measures_list;


      $sample_key = '';
      $snapshot_key = '';

      foreach ($measure_rows as $measure_info_nid => $measure_selection) {
        if ($measure_selection['#status'] == 'key' || $measure_selection['#status'] == 'selected') {
          $measure_info = node_load($measure_info_nid);
          if ($measure_info->content_options === 'moonrock_sample') {
            $sample_key = "$measures_param-$measure_info_nid";
          } else if ($measure_info->content_options === 'moonrock_snapshot') {
            $snapshot_key = "$measures_param-$measure_info_nid";
          }
        }
      }

      $sample_nid = $node->onepageprofile_categories[$sample_key]['value'];
      $snapshot_nid = $node->onepageprofile_categories[$snapshot_key]['value'];

      $snapshot = node_load($snapshot_nid);
      if (!$snapshot) {
        $snapshot = new stdClass();
        $snapshot->uid = $user->uid;
        $snapshot->type = 'moonrock_snapshot';
      }
      $snapshot->notes = $node->onepageprofile_categories['moonrock_snapshot_notes']['value'];
      $snapshot->vm_parameters = $node->onepageprofile_categories['moonrock_snapshot_notes']['value'];
      $snapshot->sample_ref = $sample_nid;
      node_save($snapshot);
      $node->onepageprofile_categories[$snapshot_key]['value'] = $snapshot->nid;
      moonrock_snapshot_images_savesnapshot($node->onepageprofile_categories['moonrock_snapshot_image']['value'], $snapshot->nid);
      return;
    }
  }
}

function moonrock_data_input_data_search() {
  $data = pi_sort_data_get_unsorted_items();
  $sample_filter = $_REQUEST['nid'];
  $sample_measure_nid = $data['content_measures']['moonrock_sample'];
  $snapshot_measure_nid = $data['content_measures']['moonrock_snapshot'];
  
  $measures_content = array();
  foreach($data['content_measures'] as $content => $nid) {
    $measures_content[$nid] = $content;
  }
  
  $items = array();

  foreach ($data['items'] as $datum_nid => $datum) {
    if ($datum[$sample_measure_nid] == $sample_filter) {
      $snapshot_nid = $datum[$snapshot_measure_nid];

      $metadata_headers = array(t('Measure'), t('Value'));
      $metadata_rows = array();
      foreach ($data['measures'] as $measure_nid => $measure) {
        if ($measure_nid !== $snapshot_measure_nid) {
          $value = $datum[$measure_nid];
          if (strlen($value) > 0) {
            $formatted_value = pi_chart_get_html_value($value, $measure);
            $measure_text = check_plain($measure->title);
            if ($measure->units_short) {
              $formatted_value .= ' ' . check_plain($measure->units_short);
            }
            $metadata_rows[] = array($measure_text, $formatted_value);
          }
        }
      }
      
      $snapshot = node_load($snapshot_nid);
      

      $item = array(
          'id' => $datum_nid,
          'image' => moonrock_snapshot_images_get_snapshot_url($snapshot_nid),
          'data' => array(
              'selected_measures_nid' => $data['selected_measures_nid'],
              'content_measures' => $data['content_measures'],
              'measures_content' => $measures_content,
              'values' => $datum,
              'snapshot_vm_parameters' => $snapshot->vm_parameters,
          ),
          'metadata' => array(
              'title' => t('Data'),
              'content' => theme('table', $metadata_headers, $metadata_rows),
          ),
      );

      foreach ($data['measures'] as $measure_nid => $measure) {
        
      }

      $items[] = $item;
    }
  }

  drupal_json(array(
      'status' => TRUE,
      'items' => $items,
  ));
}

function moonrock_data_input_theme() {
  return array(
      'moonrock_data_input_form_page' => array(
          'arguments' => array('form'),
      ),
      'moonrock_data_input_data_browser' => array(
          'arguments' => array(),
      ),
  );
}

function theme_moonrock_data_input_form_page($separator) {
  $sample_view = moonrock_sample_utils_find_unique_seesamples_activity();
  $vm = theme('moonrock_vm_view_vm') . theme('moonrock_data_input_data_browser');
  $blocks = array(
      array(
          'id' => 'moonrock-data-input',
          'title' => t('Data measures'),
          'content' => $separator,
      ),
  );

  $vm_view = theme('moonrock_sample_utils_page_with_block', $vm, $blocks);
  $page = theme('moonrock_vm_view_page', $sample_view, $vm_view);
  return $page;
}

function moonrock_data_input_form_pi_data_node_form_alter(&$form, &$form_state) {
  $separator = $form['#build_id'];
  $presentation = theme('moonrock_data_input_form_page', $separator);
  $p = strpos($presentation, $separator);
  $form['#prefix'] = substr($presentation, 0, $p) . $form['#prefix'];
  $form['#suffix'] = $form['#suffix'] . substr($presentation, $p + strlen($separator));
  $form['data_nid'] = array(
      '#type' => 'hidden',
      '#default_value' => isset($form['#node']->nid) ? $form['#node']->nid : '',
  );

  /* $form['submit_data'] = array(
    '#type' => 'button',
    '#value' => t('Save'),
    '#weight' => 5,
    '#attributes' => array('onClick' => 'MoonrockDataFormData.submit();return false;'),
    ); */

  drupal_add_js(drupal_get_path('module', 'moonrock_data_input') . '/js/data.js');
  drupal_add_js(drupal_get_path('module', 'moonrock_data_input') . '/js/image.js');


  unset($form['buttons']);
  $form['buttons'] = array(
      'save' => array(
          '#id' => 'moonrock-data-input-button-save',
          '#type' => 'button',
          '#value' => t('Add data'),
          '#weight' => 50,
          '#attributes' => array('onClick' => 'MoonrockDataInput.saveData();return false;'),
      ),
      'update' => array(
          '#id' => 'moonrock-data-input-button-update',
          '#type' => 'button',
          '#value' => t('Save'),
          '#weight' => 51,
          '#attributes' => array('onClick' => 'MoonrockDataInput.updateData();return false;'),
      ),
      'savenew' => array(
          '#id' => 'moonrock-data-input-button-savenew',
          '#type' => 'button',
          '#value' => t('Save New'),
          '#weight' => 52,
          '#attributes' => array('onClick' => 'MoonrockDataInput.saveNewData();return false;'),
      ),
      'delete' => array(
          '#id' => 'moonrock-data-input-button-delete',
          '#type' => 'button',
          '#value' => t('Delete'),
          '#weight' => 53,
          '#attributes' => array('onClick' => 'MoonrockDataInput.deleteData();return false;'),
      ),
  );


  return;
}

function theme_moonrock_data_input_data_browser() {
  drupal_add_css(drupal_get_path('module', 'moonrock_data_input') . '/css/dataBrowser.css');
  drupal_add_js(drupal_get_path('module', 'moonrock_data_input') . '/js/dataBrowser.js');

  moonrock_sample_utils_load_item_browser_resources();



  $output = '<div class="moonrock-data-browser-container">'
          . ' <div class="moonrock-data-browser-heading">' . t('Your data for this sample: ') . '</div>'
          . ' <div id="moonrock-data-browser-throbber" class="moonrock-data-browser-throbber"></div>'
          . ' <div id="moonrock-data-browser" class="moonrock-data-browser"></div>'
          . '</div>';

  return $output;
}