<?php

function moonrock_data_input_menu() {

  $items = array(
      'moonrock_data_input/%/search' => array(
          'page callback' => 'moonrock_data_input_data_search',
          'access callback' => 'moonrock_data_input_data_search_access',
          'type' => MENU_CALLBACK,
      ),
      'moonrock_data_input/%/submit' => array(
          'page callback' => 'moonrock_data_input_data_submit',
          'access callback' => 'moonrock_data_input_data_submit_access',
          'type' => MENU_CALLBACK,
      ),
      'moonrock_data_input/%/delete' => array(
          'page callback' => 'moonrock_data_input_data_delete',
          'access callback' => 'moonrock_data_input_data_delete_access',
          'type' => MENU_CALLBACK,
      ),
  );

  return $items;
}

function moonrock_data_input_data_search_access() {
  return true;
}

function moonrock_data_input_data_submit_access() {
  return true;
}

function moonrock_data_input_data_delete_access() {
  return true;
}

function moonrock_data_input_data_delete() {
  global $user;

  if (strlen($_REQUEST['data_nid']) > 0) {
    $nid = $_REQUEST['data_nid'];
    $node = node_load($nid);
    if ($node->type === 'pi_data' && $node->uid === $user->uid) {
      node_delete($nid);


      unset($_SESSION['messages']['status']);
      $result = array(
          'status' => TRUE,
      );
      drupal_json($result);
    }
  }
}

function moonrock_data_input_data_submit() {
  global $user;

  if (strlen($_REQUEST['data_nid']) > 0) {
    $node = node_load($_REQUEST['data_nid']);
    if ($node->uid != $user->uid) {
      return;
    }
  } else {
    $node = new stdClass();
    $node->uid = $user->uid;
    $node->type = 'pi_data';
  }
  $node->form_id = $_REQUEST['form_id'];
  $node->form_build_id = $_REQUEST['form_build_id'];
  $node->title = $_REQUEST['title'];
  $node->onepageprofile_categories = $_REQUEST['onepageprofile_categories'];
  node_save($node);

  $saved_node = node_load($node->nid, NULL, TRUE);

  $data = pi_sort_data_get_measure_information();
  $item = pi_sort_data_get_process_item($saved_node, $data);
  $data['items'] = array($saved_node->nid => $item);
  $processed_items = _moonrock_data_input_prepare_data_items($data);

  $result = array(
      'status' => TRUE,
      'item' => $processed_items[0],
  );

  drupal_json($result);
}

function _moonrock_data_input_prepare_data_items($data, $sample_filter = FALSE) {
  $sample_measure_nid = $data['content_measures']['moonrock_sample'];
  $snapshot_measure_nid = $data['content_measures']['moonrock_snapshot'];

  $measures_content = array();
  foreach ($data['content_measures'] as $content => $nid) {
    $measures_content[$nid] = $content;
  }

  $items = array();

  foreach ($data['items'] as $datum_nid => $datum) {
    if ($sample_filter === FALSE || $datum[$sample_measure_nid] == $sample_filter) {
      $snapshot_nid = $datum[$snapshot_measure_nid];

      $metadata_headers = array(t('Measure'), t('Value'));
      $metadata_rows = array();
      foreach ($data['measures'] as $measure_nid => $measure) {
        if ($measure_nid !== $snapshot_measure_nid) {
          $value = $datum[$measure_nid];
          if (strlen($value) > 0) {
            $formatted_value = pi_chart_get_html_value($value, $measure);
            $measure_text = check_plain($measure->title);
            if ($measure->units_short) {
              $formatted_value .= ' ' . check_plain($measure->units_short);
            }
            $metadata_rows[] = array($measure_text, $formatted_value);
          }
        }
      }

      $snapshot = node_load($snapshot_nid);


      $item = array(
          'id' => $datum_nid,
          'image' => moonrock_snapshot_images_get_snapshot_url($snapshot_nid),
          'data' => array(
              'selected_measures_nid' => $data['selected_measures_nid'],
              'content_measures' => $data['content_measures'],
              'measures_content' => $measures_content,
              'values' => $datum,
              'snapshot_vm_position' => $snapshot->position,
              'snapshot_vm_viewurl' => $snapshot->url,
              'snapshot_vm_annotation' => $snapshot->annotation
          ),
          'metadata' => array(
              'title' => t('Data'),
              'content' => theme('table', $metadata_headers, $metadata_rows),
          ),
      );

      foreach ($data['measures'] as $measure_nid => $measure) {
        
      }

      $items[] = $item;
    }
  }

  return $items;
}

function _moonrock_data_input_find_data_for_sample($sample_filter) {
  $data = pi_sort_data_get_unsorted_items();
  return _moonrock_data_input_prepare_data_items($data, $sample_filter);
}

function moonrock_data_input_nodeapi(&$node, $op) {
  if (($op === 'presave' && $node->form_id === 'pi_data_node_form') || ($op === 'delete' && $node->type === 'pi_data')) {
    global $user;
    $node_details = get_inquiry_details_from_current_path();
    $measures_param = find_selected_measures_nid_for_uid_and_inquiry($user->uid, $node_details->inquiry_id);
    if ($measures_param) {
      $measures_node = node_load($measures_param);
      $measure_rows = $measures_node->measures_list;


      $sample_key = '';
      $snapshot_key = '';

      foreach ($measure_rows as $measure_info_nid => $measure_selection) {
        if ($measure_selection['#status'] == 'key' || $measure_selection['#status'] == 'selected') {
          $measure_info = node_load($measure_info_nid);
          if ($measure_info->content_options === 'moonrock_sample') {
            $sample_key = "$measures_param-$measure_info_nid";
          } else if ($measure_info->content_options === 'moonrock_snapshot') {
            $snapshot_key = "$measures_param-$measure_info_nid";
          }
        }
      }

      $sample_nid = $node->onepageprofile_categories[$sample_key]['value'];
      $snapshot_nid = $node->onepageprofile_categories[$snapshot_key]['value'];

      switch ($op) {
        case 'presave':
          $snapshot = node_load($snapshot_nid);
          if (!$snapshot) {
            $snapshot = new stdClass();
            $snapshot->uid = $user->uid;
            $snapshot->type = 'moonrock_snapshot';
          }
          $snapshot->notes = $node->onepageprofile_categories['moonrock_snapshot_notes']['value'];
          $snapshot->position = $node->onepageprofile_categories['moonrock_snapshot_position']['value'];
          $snapshot->url = $node->onepageprofile_categories['moonrock_snapshot_viewurl']['value'];
          $snapshot->annotation = $node->onepageprofile_categories['moonrock_snapshot_annotation']['value'];
          $snapshot->sample_ref = $sample_nid;
          node_save($snapshot);
          $node->onepageprofile_categories[$snapshot_key]['value'] = $snapshot->nid;
          moonrock_snapshot_images_savesnapshot($node->onepageprofile_categories['moonrock_snapshot_image']['value'], $snapshot->nid);
          return;
          break;
        case 'delete':
          $snapshot = node_load($snapshot_nid);
          node_delete($snapshot_nid);
          break;
        default:
          break;
      }
    }
  }
}

function moonrock_data_input_data_search() {
  $sample_filter = $_REQUEST['nid'];


  drupal_json(array(
      'status' => TRUE,
      'items' => _moonrock_data_input_find_data_for_sample($sample_filter),
  ));
}

function moonrock_data_input_theme() {
  return array(
      'moonrock_data_input_form_page' => array(
          'arguments' => array('form'),
      ),
      'moonrock_data_input_data_browser' => array(
          'arguments' => array(),
      ),
      'moonrock_data_input_form_block' => array(
          'arguments' => array('separtor'),
      ),
  );
}

function theme_moonrock_data_input_form_block($separator) {
  drupal_add_css(drupal_get_path('module', 'moonrock_data_input') . '/css/dataMenu.css');
  drupal_add_js(drupal_get_path('module', 'moonrock_data_input') . '/js/data.js');
  drupal_add_js(drupal_get_path('module', 'moonrock_data_input') . '/js/actions.js');
  drupal_add_js(drupal_get_path('module', 'moonrock_data_input') . '/js/jquery.vmMeasureField.js');
  drupal_add_css(drupal_get_path('module', 'moonrock_data_input') . '/css/vmMeasureField.css');


  drupal_add_css(drupal_get_path('module', 'moonrock_sample_utils') . '/css/falseblock.css');

  $title = '<div class="moonrock-block-title">'
          . '<div id="moonrock-data-input-header-new">' . t('Add new data') . '</div>'
          . '<div id="moonrock-data-input-header-edit">' . t('Edit data') . '</div>'
          . '</div>';
  $middle = '<div class="moonrock-block-middle-content">' . $separator . '</div>';

  $bottom = '<div class="moonrock-block-bottom-content">'
          . '<div class="moonrock-data-input-button-menu">'
          . '  <div class="moonrock-data-input-button-row">'
          . '    <div class="moonrock-data-input-message moonrock-data-input-hidden" id="moonrock-data-input-button-newitem">' . t('New data ') . '</div> '
          . '    <div class="moonrock-data-input-message moonrock-data-input-hidden" id="moonrock-data-input-button-modified">' . t('Data modified ') . '</div> '
          . '    <div class="moonrock-data-input-button moonrock-data-input-hidden" id="moonrock-data-input-button-save">' . t('Save') . '</div> '
          . '    <div class="moonrock-data-input-message moonrock-data-input-hidden" id="moonrock-data-input-button-saving">' . t('Saving data... ') . '</div> '
          . '    <div class="moonrock-data-input-message moonrock-data-input-hidden" id="moonrock-data-input-button-saved">' . t('Changes saved ') . '</div> '
          . '    <div class="moonrock-data-input-icon moonrock-data-input-hidden" id="moonrock-data-input-button-undo"></div> '
          . '    <div class="moonrock-data-input-icon moonrock-data-input-hidden" id="moonrock-data-input-button-redo"></div>'
          . '  </div>'
          . '  <div class="moonrock-data-input-button-row">'
          . '    <div class="moonrock-data-input-button moonrock-data-input-hidden" id="moonrock-data-input-button-createdata">' . t('New data') . '</div>'
          . '    <div class="moonrock-data-input-button moonrock-data-input-hidden" id="moonrock-data-input-button-deletedata">' . t('Delete data') . '</div>'
          . '  </div>'
          . '</div>'
          . '</div>';

  return theme('moonrock_layout_vertical', array(
              array('content' => $title),
              array('content' => $middle, 'flex' => TRUE),
              array('content' => $bottom),
                  ), FALSE);

//  return theme('moonrock_sample_utils_false_block', $titles, $content);
}

function theme_moonrock_data_input_form_page($separator) {
  moonrock_sample_utils_load_javascript_modules_support();
  
  $sample_view = moonrock_sample_utils_find_unique_seesamples_node();
  //$vm_page = theme('moonrock_vm_view_vm_simple_page');
  //$navigator = theme('moonrock_vm_view_vm_top_navigator');
  $vm = theme('moonrock_vm_view_vm');
  $data_browser = theme('moonrock_data_input_data_browser');
  $left = theme('moonrock_layout_vertical', array(
      array('content' => $vm, 'flex' => TRUE),
      array('content' => $data_browser),
          ), FALSE);

  $form = theme('moonrock_data_input_form_block', $separator);
  $vm_page = theme('moonrock_layout_horizontal', array(
      array('content' => $left, 'flex' => TRUE),
      array('content' => $form, 'width' => 200),
          ), TRUE);

  $output = theme('moonrock_seesamples_tabs', $sample_view, $vm_page);
  return $output;
}

function moonrock_data_input_form_pi_data_node_form_alter(&$form, &$form_state) {
  $separator = $form['#build_id'];
  $presentation = theme('moonrock_data_input_form_page', $separator);
  $p = strpos($presentation, $separator);
  $form['#prefix'] = substr($presentation, 0, $p) . $form['#prefix'];
  $form['#suffix'] = $form['#suffix'] . substr($presentation, $p + strlen($separator));
  $form['data_nid'] = array(
      '#type' => 'hidden',
      '#default_value' => isset($form['#node']->nid) ? $form['#node']->nid : '',
  );


  unset($form['buttons']);

  return;
}

function theme_moonrock_data_input_data_browser() {
  drupal_add_css(drupal_get_path('module', 'moonrock_data_input') . '/css/dataBrowser.css');
  drupal_add_js(drupal_get_path('module', 'moonrock_data_input') . '/js/dataBrowser.js');

  moonrock_sample_utils_load_item_browser_resources();

  $output = '<div class="moonrock-data-browser-container">'
          . ' <div id="moonrock-data-browser" class="moonrock-data-browser">' . t('Your data for this sample:') . '</div>'
          . '</div>';

  return $output;
}